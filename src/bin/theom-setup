#!/bin/bash

# ---------------------- #
#      Information       #
# ---------------------- #

##$ This script runs every time theom is launched.
##$ This script makes sure that all necessary files exists for theom to run.

# ---------------------- #
#       Log Setup        #
# ---------------------- #

LOGDIR="$HOME/.local/state/theom/logs"
LOGFILE="$LOGDIR/setup.log"
MAXSIZE=51200 # 50 KB

mkdir -p "$LOGDIR"

# Emptying if too large
if [ -f "$LOGFILE" ] && [ "$(stat -c%s "$LOGFILE")" -gt "$MAXSIZE" ]; then
  : >"$LOGFILE"
fi

log() {
  echo "[$(date '+%F %T')] $*" >>"$LOGFILE"
}

loud_log() {
  echo "$*"
  echo "[$(date '+%F %T')] $*" >>"$LOGFILE"
}

trap 'log "[ERROR] Command failed at line $LINENO: $BASH_COMMAND (exit $?)"' ERR
set -o errtrace

log "[START] Starting Theom setup"

# ---------------------- #
#        Migrate         #
# ---------------------- #
flag=$1

if [ "$flag" == "--migrate" ]; then
  loud_log "[INFO] Migrating to latest version"
  loud_log "[WARN] This process may overwrite your existing theom configuration"

  CONFIG_PATH="$HOME/.config/theom/config.toml"
  BACKUP_PATH="$CONFIG_PATH.bak"
  MIGRATOR="/usr/share/theom/scripts/migrate_toml.py"

  if [ ! -f "$CONFIG_PATH" ]; then
    loud_log "[ERROR] Cannot migrate: $CONFIG_PATH does not exist."
    loud_log "[INFO] Run theom-setup without any arguments to generate $CONFIG_PATH"
    exit 1
  fi

  # Backup
  if cp "$CONFIG_PATH" "$BACKUP_PATH"; then
    loud_log "[BACKUP] Backed up to $BACKUP_PATH"
  else
    loud_log "[ERROR] Backup failed. Aborting migration."
    exit 1
  fi

  # Run Python merge tool
  if ! output=$(python3 "$MIGRATOR" 2>&1); then
    loud_log "[ERROR] Migration script failed:"
    loud_log "$output"
    loud_log "[RESTORE] Reverting from backup..."
    cp "$BACKUP_PATH" "$CONFIG_PATH"
    exit 1
  fi

  loud_log "$output"
  loud_log "[DONE] Migration completed successfully."
  exit 0
fi

# ---------------------- #
#        Configs         #
# ---------------------- #
copy_if_missing() {
  SRC="$1"
  DEST="$2"
  if [ ! -s "$DEST" ]; then
    mkdir -p "$(dirname "$DEST")"
    if cp "$SRC" "$DEST"; then
      log "[COPY] Created $DEST from $SRC"
    else
      log "[ERROR] Failed to copy $SRC to $DEST"
    fi
  fi
}

# Alacritty
copy_if_missing /usr/share/theom/config/alacritty/dark/alacritty.toml ~/.config/alacritty/dark/alacritty.toml
copy_if_missing /usr/share/theom/config/alacritty/light/alacritty.toml ~/.config/alacritty/light/alacritty.toml

# Dunst
copy_if_missing /usr/share/theom/config/dunst/dark/dunstrc ~/.config/dunst/dark/dunstrc
copy_if_missing /usr/share/theom/config/dunst/light/dunstrc ~/.config/dunst/light/dunstrc

# i3
# copy_if_missing /usr/share/theom/config/i3/config ~/.config/i3/config

# Picom
# copy_if_missing /usr/share/theom/config/picom/picom.conf ~/.config/picom/picom.conf

# Polybar
copy_if_missing /usr/share/theom/config/polybar/dark/config.ini ~/.config/polybar/dark/config.ini
copy_if_missing /usr/share/theom/config/polybar/light/config.ini ~/.config/polybar/light/config.ini
copy_if_missing /usr/share/theom/config/polybar/launch.sh ~/.config/polybar/launch.sh
copy_if_missing /usr/share/theom/config/polybar/modules/layout.conf ~/.config/polybar/modules/layout.conf
copy_if_missing /usr/share/theom/config/polybar/modules/layout.float.conf ~/.config/polybar/modules/layout.float.conf
copy_if_missing /usr/share/theom/config/polybar/modules/layout.stuck.conf ~/.config/polybar/modules/layout.stuck.conf

# EWW
copy_if_missing /usr/share/theom/config/eww/launch.sh ~/.config/eww/launch.sh
copy_if_missing /usr/share/theom/config/eww/eww.yuck ~/.config/eww/eww.yuck
copy_if_missing /usr/share/theom/config/eww/eww.scss ~/.config/eww/eww.scss
for script in calendar_popup power_profiles_popup get_theme getbattery getvol music music_title open-systray workspace; do
  copy_if_missing "/usr/share/theom/config/eww/scripts/$script" "$HOME/.config/eww/scripts/$script"
done

# Rofi
copy_if_missing /usr/share/theom/config/rofi/dark/config.rasi ~/.config/rofi/dark/config.rasi
copy_if_missing /usr/share/theom/config/rofi/dark/colors.rasi ~/.config/rofi/dark/colors.rasi
copy_if_missing /usr/share/theom/config/rofi/light/config.rasi ~/.config/rofi/light/config.rasi
copy_if_missing /usr/share/theom/config/rofi/light/colors.rasi ~/.config/rofi/light/colors.rasi

# Flameshot

copy_if_missing /usr/share/theom/config/flameshot/flameshot.ini ~/.config/flameshot/flameshot.ini

# GTK XDG Portals
copy_if_missing /usr/share/theom/config/xdg-desktop-portal/gtk-portals.conf ~/.config/xdg-desktop-portal/gtk-portals.conf

# Starship
copy_if_missing /usr/share/theom/config/starship.toml ~/.config/starship.toml
if ! grep -q 'eval "$(starship init bash)"' "$HOME/.bashrc"; then
  echo 'eval "$(starship init bash)"' >>"$HOME/.bashrc"
  log "[APPEND] Added starship init to .bashrc"
fi

# MPD
copy_if_missing /usr/share/theom/config/mpd/mpd.conf ~/.mpd/mpd.conf

# Widgets
copy_if_missing /usr/share/theom/config/theom/twidgets/README.md ~/.config/theom/twidgets/README.md
copy_if_missing /usr/share/theom/config/theom/twidgets/time.lua ~/.config/theom/twidgets/time.lua
copy_if_missing /usr/share/theom/config/theom/twidgets/uptime.lua ~/.config/theom/twidgets/uptime.lua

# Theom
copy_if_missing /usr/share/theom/config/theom/config.toml ~/.config/theom/config.toml
copy_if_missing /usr/share/theom/config/theom/keybindings.conf ~/.config/theom/keybindings.conf
copy_if_missing /usr/share/theom/config/theom/.win/extra_config.conf ~/.config/theom/.win/extra_config.conf
copy_if_missing /usr/share/theom/config/theom/.osd-snippets/brightness.sh ~/.config/theom/.osd-snippets/brightness.sh
copy_if_missing /usr/share/theom/config/theom/.osd-snippets/volume.sh ~/.config/theom/.osd-snippets/volume.sh

# Autostarts
copy_if_missing /usr/share/theom/config/theom-autostarts/exec_once.sh ~/.config/theom-autostarts/exec_once.sh
copy_if_missing /usr/share/theom/config/theom-autostarts/exec_always.sh ~/.config/theom-autostarts/exec_always.sh

# User Scripts
copy_if_missing /usr/share/theom/config/theom/user_scripts/battery_notify ~/.config/theom/user_scripts/battery_notify

# ---------------------- #
#       Auto Gen         #
# ---------------------- #
/usr/share/theom/scripts/tscdScript >/dev/null 2>&1

# ---------------------- #
#         Themes         #
# ---------------------- #

GTK3_CONFIG="$HOME/.config/gtk-3.0/settings.ini"
GTK2_CONFIG="$HOME/.gtkrc-2.0"
ICON_THEME_DIR="$HOME/.icons/default"
ICON_THEME_INDEX="$ICON_THEME_DIR/index.theme"
XRESOURCES="$HOME/.Xresources"

if [ ! -s "$GTK3_CONFIG" ]; then
  mkdir -p "$(dirname "$GTK3_CONFIG")"
  cat >"$GTK3_CONFIG" <<EOF
[Settings]
gtk-theme-name=Materia-dark
gtk-icon-theme-name=Papirus
gtk-cursor-theme-name=capitaine-cursors
gtk-cursor-theme-size=24
gtk-font-name=Sans 10
EOF

  log "[INFO] Initialized $GTK3_CONFIG with default content"
fi

if [ ! -s "$GTK2_CONFIG" ]; then
  cat >"$GTK2_CONFIG" <<EOF
gtk-theme-name="Materia-dark"
gtk-icon-theme-name="Papirus"
gtk-cursor-theme-name=capitaine-cursors
EOF

  log "[INFO] Initialized $GTK2_CONFIG with default content"
fi

if [ ! -s "$ICON_THEME_INDEX" ]; then
  mkdir -p "$ICON_THEME_DIR"
  cat >"$ICON_THEME_INDEX" <<EOF
[Icon Theme]
Inherits=capitaine-cursors
EOF

  log "[INFO] Initialized $ICON_THEME_INDEX with default content"
fi

if [ ! -s "$XRESOURCES" ]; then
  cat >"$XRESOURCES" <<EOF
! Xresources for cursor theme
Xcursor.theme: capitaine-cursors
Xcursor.size: 24
EOF

  log "[INFO] Initialized $XRESOURCES with default content"
fi

log "[END] Finished Theom setup"


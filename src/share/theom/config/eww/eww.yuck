;; variables
(defpoll theme :interval "5m" "scripts/get_theme")
(defpoll day :interval "20h" "date '+%d'")
(defpoll year :interval "20h" "date '+%Y'")
(deflisten player_state :initial "paused"
  "mpc status | grep -o 'playing\\|paused\\|stopped'")

(deflisten is_playing :initial "false"
  "scripts/music")

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "scripts/music_title")

(defpoll battery_state :interval "2s" :initial "unknown" "scripts/getbattery state")
(defpoll battery_percent :interval "2s" :initial "0" "scripts/getbattery percent")

(deflisten volume :initial ""
  "scripts/getvol")

(defpoll time :interval "10s"
  "date  '+%H:%M'") 

;; It looks absurd but i had to do it.. :(
(deflisten workspace_1 :initial "·" "scripts/workspace 1")
(deflisten workspace_2 :initial "·" "scripts/workspace 2")
(deflisten workspace_3 :initial "·" "scripts/workspace 3")
(deflisten workspace_4 :initial "·" "scripts/workspace 4")
(deflisten workspace_5 :initial "·" "scripts/workspace 5")
(deflisten workspace_6 :initial "·" "scripts/workspace 6")
(deflisten workspace_7 :initial "·" "scripts/workspace 7")
(deflisten workspace_8 :initial "·" "scripts/workspace 8")
(deflisten workspace_9 :initial "·" "scripts/workspace 9")
(deflisten workspace_10 :initial "·" "scripts/workspace 10")

;; widgets
(defwidget bar []
  (centerbox 
    :visible "${theme != ''}"
    :class "${theme == 'light' ? 'bar light-theme' : (theme == 'dark' ? 'bar dark-theme' : 'bar')}"
    :orientation "h"
    (left)
    (center)
    (right)))

(defwidget cal []
(box :class "calendar" :orientation "v"
(box :class "calendar-in"
(calendar :class "calendar" 
            :day day 
            :year year))))
    
(defwidget separator []
  (box :class "separator"
       :width "1px"
       :height "20px"
       :background-color "#888"
       :margin "0 8px"))

(defwidget right []
  (box :class "right" :orientation "h" :space-evenly false :halign "end"
    (box :visible "${battery_state != 'unknown'}"
    (button
      :onclick ""
      :class "${battery_state == 'charging' ? 'battery-charging' : (battery_state == 'fully-charged' ? 'battery-full' : 'battery-discharging')}" ; sorryo i had to nest it
      "󰁹 ${battery_percent}% "))

    (box :visible "${battery_state != 'unknown'}"
    (separator))

    (metric :label ""
            :value volume
            :onchange "amixer -D pulse sset Master {}%")

    ;(metric :label ""
    ;        :value {EWW_CPU["cores"][0]["usage"]}
    ;        :onchange "")

    ; (label :text " ${EWW_CPU.cores[0].usage}%")

    ;(metric :label ""
    ;        :value {EWW_RAM.used_mem_perc}
    ;        :onchange "")
    (separator)
    (button :onclick "~/.config/eww/scripts/calendar_popup" " : ${time}")))
    ; ": ${time}")) previous time widget

(defwidget left []
  (box :class "workspace"
       :orientation "h"
       :space-evenly false
       :halign "start"
       :spacing 5
    (button :onclick "i3-msg workspace 1" "${workspace_1}")
    (button :onclick "i3-msg workspace 2" "${workspace_2}")
    (button :onclick "i3-msg workspace 3" "${workspace_3}")
    (button :onclick "i3-msg workspace 4" "${workspace_4}")
    (button :onclick "i3-msg workspace 5" "${workspace_5}")
    (button :onclick "i3-msg workspace 6" "${workspace_6}")
    (button :onclick "i3-msg workspace 7" "${workspace_7}")
    (button :onclick "i3-msg workspace 8" "${workspace_8}")
    (button :onclick "i3-msg workspace 9" "${workspace_9}")
    (button :onclick "i3-msg workspace 10" "${workspace_10}")

    (separator)

    (metric :label ""
        :value {EWW_CPU["cores"][0]["usage"]}
        :onchange "")

    (metric :label ""
            :value {EWW_RAM.used_mem_perc}
            :onchange "")))


(defwidget center []
  (box :class "center"
       :orientation "h"
       :space-evenly false
       :halign "center"

    ; title
    (label :text ": ${music}")

    (box :width "10px")

    ; Previous button
    (button :onclick "mpc prev" "󰒮")

    ; Play button
    (button :onclick "mpc toggle"
            :visible "${!is_playing}"
            "󰐊")

    ; Pause button
    (button :onclick "mpc toggle"
            :visible "${is_playing}"
            "")

    ; Next track button
    (button :onclick "mpc next" "󰒭")))

;; windows
(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "90%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))

(defwindow calendar_popup
    :geometry (geometry :x "-20px" :y "7%" :anchor "top right" :width "270px" :height "60px")
    :windowtype "dialog"
    :onblur "eww close calendar_popup"
    (cal))
    
